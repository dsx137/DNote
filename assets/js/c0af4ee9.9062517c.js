"use strict";(self.webpackChunkd_note=self.webpackChunkd_note||[]).push([[2436],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(n),u=r,h=c["".concat(o,".").concat(u)]||c[u]||k[u]||l;return n?a.createElement(h,i(i({ref:t},m),{},{components:n})):a.createElement(h,i({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[c]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5198:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={},i="\u5feb\u901f\u6392\u5e8f",p={unversionedId:"notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f/\u5feb\u901f\u6392\u5e8f",id:"notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f/\u5feb\u901f\u6392\u5e8f",title:"\u5feb\u901f\u6392\u5e8f",description:"\u5f3a\u5927\uff0c\u7b80\u6d01\uff0c\u4f18\u7f8e",source:"@site/docs/notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f/\u5feb\u901f\u6392\u5e8f.md",sourceDirName:"notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f",slug:"/notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f/\u5feb\u901f\u6392\u5e8f",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f/\u5feb\u901f\u6392\u5e8f",draft:!1,editUrl:"https://github.com/dsx137/DNote/docs/notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f/\u5feb\u901f\u6392\u5e8f.md",tags:[],version:"current",frontMatter:{},sidebar:"noteSidebar",previous:{title:"\u590d\u6742\u5ea6\u8868",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6392\u5e8f/@\u590d\u6742\u5ea6\u8868"},next:{title:"\u6700\u77ed\u8def",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u7b97\u6cd5/\u6700\u77ed\u8def/@\u5e8f\u8a00"}},o={},s=[{value:"\u539f\u7406",id:"\u539f\u7406",level:2},{value:"\u5355\u6b21\u8fc7\u7a0b\u56fe\u89e3",id:"\u5355\u6b21\u8fc7\u7a0b\u56fe\u89e3",level:3},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:2},{value:"C\u6807\u51c6\u5e93\u4ee3\u7801",id:"c\u6807\u51c6\u5e93\u4ee3\u7801",level:3},{value:"\u4e0d\u4f7f\u7528\u4ea4\u6362",id:"\u4e0d\u4f7f\u7528\u4ea4\u6362",level:3},{value:"\u7701\u6d41\u7248",id:"\u7701\u6d41\u7248",level:3}],m={toc:s},c="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u5feb\u901f\u6392\u5e8f"},"\u5feb\u901f\u6392\u5e8f"),(0,r.kt)("p",null,"\u5f3a\u5927\uff0c\u7b80\u6d01\uff0c\u4f18\u7f8e"),(0,r.kt)("p",null,(0,r.kt)("del",{parentName:"p"},"\u67e5\u5c14\u65af\xb7\u970d\u5c14\u60e8\u906d\u9690\u59d3\u57cb\u540d")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\u539f\u7406"},"\u539f\u7406"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5feb\u901f\u6392\u5e8f\u5bf9\u5192\u6ce1\u6392\u5e8f\u8fdb\u884c\u4e86\u6539\u8fdb"),(0,r.kt)("p",{parentName:"blockquote"},"\u5176\u601d\u60f3\u662f\uff1a",(0,r.kt)("br",{parentName:"p"}),"\n","\u901a\u8fc7\u4e00\u6b21\u6392\u5e8f\u5c06\u6574\u4e2a\u65e0\u5e8f\u8868\u5206\u6210\u76f8\u4e92\u72ec\u7acb\u7684",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"A"),(0,r.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,r.kt)("mi",{parentName:"mrow"},"B")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"A,B")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8778em",verticalAlign:"-0.1944em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"A"),(0,r.kt)("span",{parentName:"span",className:"mpunct"},","),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05017em"}},"B"))))),"\u4e24\u90e8\u5206",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex-error",title:"ParseError: KaTeX parse error: Can't use function '$' in math mode at position 69: \u2026y\\in B \\rbrace $\u0332  \u7136\u540e\u7ee7\u7eed\u7528\u6b64\u6cd5\u5206\u522b\u5bf9",style:{color:"#cc0000"}},"\\forall x \\lbrace x\\in A \\rbrace < \\forall y \\lbrace y\\in B \\rbrace $  \u7136\u540e\u7ee7\u7eed\u7528\u6b64\u6cd5\u5206\u522b\u5bf9")),"A,B$\u8fdb\u884c\u540c\u6837\u7684\u64cd\u4f5c",(0,r.kt)("br",{parentName:"p"}),"\n","\u76f4\u5230\u6bcf\u4e00\u4e2a\u5c0f\u90e8\u5206\u4e0d\u53ef\u518d\u5206",(0,r.kt)("br",{parentName:"p"}),"\n","\u6240\u5f97\u7684\u5e8f\u5217\u5c31\u6210\u4e3a\u4e86\u6709\u5e8f\u5e8f\u5217"),(0,r.kt)("p",{parentName:"blockquote"},"\u5176\u6700\u6838\u5fc3\u7684\u601d\u60f3\u5c31\u662f\u4e8c\u5206")),(0,r.kt)("h3",{id:"\u5355\u6b21\u8fc7\u7a0b\u56fe\u89e3"},"\u5355\u6b21\u8fc7\u7a0b\u56fe\u89e3"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u53ea\u662f\u4e00\u79cd\u6bd4\u8f83\u5e38\u7528\u7684\u5206\u5272\u65b9\u5f0f")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://data.biancheng.net/view/71.html"},"\u6765\u6e90")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u662f\u5b9e\u73b0\u5206\u5272\u64cd\u4f5c"),"\n",(0,r.kt)("em",{parentName:"p"},"\u5177\u4f53\u5b9e\u73b0\u8fc7\u7a0b\u4e3a\uff1a")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"\u8bbe\u7f6e\u4e24\u4e2a\u6307\u9488 low(left) \u548c high\uff0c\u5206\u522b\u6307\u5411\u65e0\u5e8f\u8868\u7684\u8868\u5934\u548c\u8868\u5c3e\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://s2.loli.net/2022/11/23/kUGxIuMHn97AZcN.png",alt:"1"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"\u5148\u7531 high \u6307\u9488\u4ece\u53f3\u5f80\u5de6\u4f9d\u6b21\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6bd4 49 \u5c0f\u7684\u5173\u952e\u5b57\uff0c\u6240\u4ee5 high \u6307\u9488\u8d70\u5230 27 \u7684\u5730\u65b9\u505c\u6b62\u3002\u627e\u5230\u4e4b\u540e\u5c06\u8be5\u5173\u952e\u5b57\u540c low \u6307\u5411\u7684\u5173\u952e\u5b57\u8fdb\u884c\u4e92\u6362\uff1a"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://s2.loli.net/2022/11/23/eB2Js1hfbym9KRl.png",alt:"1"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"\u7136\u540e\u6307\u9488 low \u4ece\u5de6\u5f80\u53f3\u4f9d\u6b21\u904d\u5386\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6bd4 49 \u5927\u7684\u5173\u952e\u5b57\u4e3a\u6b62\uff0c\u6240\u4ee5 low \u6307\u9488\u8d70\u5230 65 \u7684\u5730\u65b9\u505c\u6b62\u3002\u540c\u6837\u627e\u5230\u540e\u540c high \u6307\u5411\u7684\u5173\u952e\u5b57\u8fdb\u884c\u4e92\u6362\uff1a"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://s2.loli.net/2022/11/23/KCFis84AGLrMhaI.png",alt:"1"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"\u6307\u9488 high \u7ee7\u7eed\u5de6\u79fb\uff0c\u5230 13 \u6240\u5728\u7684\u4f4d\u7f6e\u505c\u6b62\uff0813<49\uff09\uff0c\u7136\u540e\u540c low \u6307\u5411\u7684\u5173\u952e\u5b57\u8fdb\u884c\u4e92\u6362\uff1a"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://s2.loli.net/2022/11/23/JBoRDQfV1UMty87.png",alt:"1"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"\u6307\u9488 low \u7ee7\u7eed\u53f3\u79fb\uff0c\u5230 97 \u6240\u5728\u7684\u4f4d\u7f6e\u505c\u6b62\uff0897>49\uff09\uff0c\u7136\u540e\u540c high \u6307\u5411\u7684\u5173\u952e\u5b57\u4e92\u6362\u4f4d\u7f6e\uff1a"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://s2.loli.net/2022/11/23/6TOF1PW5CnZrsUb.png",alt:"1"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"\u6307\u9488 high \u7ee7\u7eed\u5de6\u79fb\uff0c\u6b64\u65f6\u4e24\u6307\u9488\u76f8\u9047\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7ed3\u675f\uff1b"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u4ea4\u6362\u662f\u4e3a\u4e86\u50a8\u5b58keyValue\uff0c\u5982\u679c\u7528\u4e00\u4e2a\u53d8\u91cf\u50a8\u5b58keyValue\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u4ea4\u6362")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\u4ee3\u7801\u5b9e\u73b0"},"\u4ee3\u7801\u5b9e\u73b0"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u4e0d\u540c\u7684\u4eba\u6709\u4e0d\u540c\u7684\u5199\u6cd5",(0,r.kt)("br",{parentName:"p"}),"\n","\u4f46\u90a3\u4e2a\u4e0d\u540c\u7684\u90e8\u5206\u90fd\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u529f\u80fd\uff1a",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"*","*","\u628a\u5c0f\u503c\u653e\u5728keyValue\u5de6\u8fb9\uff0c\u628a\u5927\u503c\u653e\u5728keyValue\u53f3\u8fb9","*","*"),(0,r.kt)("br",{parentName:"p"}),"\n","\u5176\u4ed6\u90e8\u5206\u90fd\u662f\u5927\u5dee\u4e0d\u5dee\u7684")),(0,r.kt)("h3",{id:"c\u6807\u51c6\u5e93\u4ee3\u7801"},"C\u6807\u51c6\u5e93\u4ee3\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},"void Qsort(void* base, int left, int right, int size, int (*cmp)(const void* a, const void* b))\n{\n    /* left may be < 0 because of the last - 1 */\n    assert(base != NULL && size >= 1 && cmp != NULL);\n    if (left >= right) return;\n    char* pleft = (char*)base + left * size;\n    char* pkey = (char*)base + (left + (right - left) / 2) * size;\n    swap(pleft, pkey, size);\n    int last = left;\n    char* plast = (char*)base + last * size;\n    //\u8fd9\u91cc\u7684for\u505a\u7684\u64cd\u4f5c\u662f\u628akeyValue\u653e\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u662f\u6682\u5b58\u4f4d\uff09\n    //\u628a\u6240\u6709\u5c0f\u4e8ekeyValue\u7684\u503c\u653e\u5728\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u540e\u9762\n    //\u7b2c\u4e00\u4e2a\u503c\u518d\u4e0e\u5c0f\u503c\u7684\u6700\u540e\u4e00\u4e2a\u4ea4\u6362\n    //\u8fd9\u6837\u6240\u6709\u5c0f\u503c\u5c31\u5728keyValue\u5de6\u8fb9\uff0c\u6240\u6709\u5927\u503c\u5728keyValue\u53f3\u8fb9\n    for (int i = left + 1; i <= right; ++i) {\n        char* pi = (char*)base + i * size;\n        if (cmp(pi, pleft) < 0) {\n            ++last;\n            plast = (char*)base + last * size;\n            swap(pi, plast, size);\n        }\n    }\n    swap(pleft, plast, size);\n    //\u4ea4\u6362\u540e*plast\u7684\u503c\u5bf9\u5e94keyValue\n    Qsort(base, left, last - 1, size, cmp);\n    Qsort(base, last + 1, right, size, cmp);\n}\n")),(0,r.kt)("h3",{id:"\u4e0d\u4f7f\u7528\u4ea4\u6362"},"\u4e0d\u4f7f\u7528\u4ea4\u6362"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6b64\u5904\u7528width\u66ff\u4ee3size")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void c_qsort(void* _arr, int left, int right, int size, int(*cmp)(const void* a, const void* b))\n{\n    //\u5b57\u8282\u5316_arr\uff08\u4f7f_arr\u5185\u7684\u6570\u636e\u8fdb\u884c\u5b57\u8282\u5bf9\u9f50\uff0c\u65b9\u4fbf\u64cd\u4f5c\uff09\n    char* arr = (char*)_arr;\n    if (left < right)\n    {\n        int low = left;\n        int high = right;\n        char* keyValue = (char*)malloc(size);\n        memcpy(keyValue, arr + low * size, size);\n        //\u8fc7\u7a0b\u4e0e\u56fe\u793a\u76f8\u540c\uff0c\u4f46\u76f4\u63a5\u8986\u76d6\u5143\u7d20\n        while (low < high)\n        {\n            while (low < high)\n            {\n                if (cmp(arr + high * size, keyValue) < 0)\n                {\n                    memcpy(arr + low * size, arr + high * size, size);\n                    break;\n                }\n                high--;\n            }\n            while (low < high)\n            {\n                if (cmp(arr + low * size, keyValue) > 0)\n                {\n                    memcpy(arr + high * size, arr + low * size, size);\n                    break;\n                }\n                low++;\n            }\n        }\n        //while\u5b8c\u6210\u4e4b\u540e\u5c06key\u6307\u5411\u7684\u5143\u7d20\u66ff\u6362\u6210keyValue\n        memcpy(arr + low * size, keyValue, size);\n        c_qsort(arr, low + 1, right, size, cmp);\n        c_qsort(arr, left, low - 1, size, cmp);\n    }\n}\n")),(0,r.kt)("h3",{id:"\u7701\u6d41\u7248"},"\u7701\u6d41\u7248"),(0,r.kt)("p",null,(0,r.kt)("del",{parentName:"p"},"\u5176\u5b9evector\u6709\u81ea\u5e26\u7684sort")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"template<typename T>\nvoid c_qsort(vector<T>& arr, int left = -2, int right = -2) {\n    left = left == -2 ? 0 : left;\n    right = right == -2 ? arr.size() - 1 : right;\n    bool flag = false;\n    if (left < right)\n    {\n        int lowKey = left;\n        int highKey = right;\n        while (lowKey < highKey) {\n            if (arr[lowKey] > arr[highKey]) {\n                swap(arr[lowKey], arr[highKey]);\n                flag = !flag;\n                continue;\n            }\n            flag ? lowKey++ : highKey--;\n        }\n        c_qsort(arr, lowKey + 1, right);\n        c_qsort(arr, left, lowKey - 1);\n    }\n}\n")))}k.isMDXComponent=!0}}]);