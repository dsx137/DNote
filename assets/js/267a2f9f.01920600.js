"use strict";(self.webpackChunkd_note=self.webpackChunkd_note||[]).push([[6293],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},k=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(t),k=r,m=u["".concat(s,".").concat(k)]||u[k]||d[k]||a;return t?o.createElement(m,l(l({ref:n},c),{},{components:t})):o.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=k;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:r,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}k.displayName="MDXCreateElement"},7545:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=t(7462),r=(t(7294),t(3905));const a={},l="\u81ea\u5b9a\u4e49\u7c7b\u578b",i={unversionedId:"notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/4.\u81ea\u5b9a\u4e49\u7c7b\u578b",id:"notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/4.\u81ea\u5b9a\u4e49\u7c7b\u578b",title:"\u81ea\u5b9a\u4e49\u7c7b\u578b",description:"data",source:"@site/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/4.\u81ea\u5b9a\u4e49\u7c7b\u578b.md",sourceDirName:"notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell",slug:"/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/4.\u81ea\u5b9a\u4e49\u7c7b\u578b",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/4.\u81ea\u5b9a\u4e49\u7c7b\u578b",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"noteSidebar",previous:{title:"\u5c40\u90e8\u58f0\u660e",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/3.\u5c40\u90e8\u58f0\u660e"},next:{title:"\u6a21\u5f0f\u5339\u914d",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/5.\u6a21\u5f0f\u5339\u914d"}},s={},p=[{value:"data",id:"data",level:2},{value:"class",id:"class",level:2},{value:"type",id:"type",level:2},{value:"newtype",id:"newtype",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u81ea\u5b9a\u4e49\u7c7b\u578b"},"\u81ea\u5b9a\u4e49\u7c7b\u578b"),(0,r.kt)("h2",{id:"data"},"data"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6709\u70b9\u50cfC\u91cc\u9762\u7684struct",(0,r.kt)("br",{parentName:"p"}),"\n","\u7528\u6765\u5b9a\u4e49\u6570\u636e\u7684\u7ed3\u6784")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'data Position = MakePosition Double Double -- MakePosition\u662f\u6784\u9020\u51fd\u6570\nMakePosition 1.5 2 :: Position\n\n-- \u4e2d\u7f00\u6784\u9020\u51fd\u6570\ndata Position = Double :+ Double -- \u5fc5\u987b\u52a0\u5192\u53f7\n1.5 :+ 2 :: Position\n\n-- \u7a7a\u6784\u9020\u51fd\u6570\uff08\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u8be5\u7c7b\u578b\u7684\u503c\uff09\ndata Color = Red -- \u6b64\u5904Red\u5c31\u662f\u7a7a\u6784\u9020\u51fd\u6570\n\n-- \u591a\u4e2a\u6784\u9020\u51fd\u6570\ndata Color = Red | Green | Blue\n\n-- \u53c2\u6570\u5316\u7684\u6570\u636e\u7c7b\u578b\ndata UserInfo a b = NoInfo | NameInfo a | AgeInfo b\n\n-- \u8bb0\u5f55\ndata Person\n    = Student\n        { name :: String\n        , age :: Int\n        }\n    | Teacher\n        { name :: String\n        , rank :: String\n        }\n\njohnDoe :: Person\njohnDoe = Student { name = "John Doe", age = 15 } -- \u521b\u5efa\u8bb0\u5f55\n\njohnsName :: String\njohnsName = name johnDoe -- \u8bbf\u95ee\u8bb0\u5f55\u7684\u5b57\u6bb5\n\nolderJohn :: Person\nolderJohn = johnDoe { age = 16 } -- \u66f4\u65b0\u8bb0\u5f55\n\n-- GADTs\uff08\u901a\u7528\u4ee3\u6570\u6570\u636e\u7c7b\u578b\uff09\uff1a\u663e\u5f0f\u6307\u5b9a\u6784\u9020\u51fd\u6570\u7c7b\u578b\ndata Expr a where\n    IntLit   :: Int -> Expr Int\n    BoolLit  :: Bool -> Expr Bool\n    Add      :: Expr Int -> Expr Int -> Expr Int\n')),(0,r.kt)("h2",{id:"class"},"class"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6709\u70b9\u50cfinterface",(0,r.kt)("br",{parentName:"p"}),"\n","\u5b9a\u4e49\u4e00\u7ec4\u529f\u80fd")),(0,r.kt)("h2",{id:"type"},"type"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7c7b\u578b\u522b\u540d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"type Position = (Double, Double)\n")),(0,r.kt)("h2",{id:"newtype"},"newtype"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5b9a\u4e49\u65b0\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u51fd\u6570")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"newtype Position = MakePosition (Double, Double)\nMakePosition (1.5, 2) :: Position\n")))}d.isMDXComponent=!0}}]);