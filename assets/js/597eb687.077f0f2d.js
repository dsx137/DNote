"use strict";(self.webpackChunkd_note=self.webpackChunkd_note||[]).push([[2247],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),i=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=i(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=i(t),k=r,m=u["".concat(p,".").concat(k)]||u[k]||d[k]||o;return t?a.createElement(m,l(l({ref:n},c),{},{components:t})):a.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=k;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var i=2;i<o;i++)l[i]=t[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},1465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var a=t(7462),r=(t(7294),t(3905));const o={},l="\u81ea\u5b9a\u4e49\u7c7b\u578b",s={unversionedId:"notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/8.\u81ea\u5b9a\u4e49\u7c7b\u578b",id:"notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/8.\u81ea\u5b9a\u4e49\u7c7b\u578b",title:"\u81ea\u5b9a\u4e49\u7c7b\u578b",description:"data",source:"@site/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/8.\u81ea\u5b9a\u4e49\u7c7b\u578b.md",sourceDirName:"notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell",slug:"/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/8.\u81ea\u5b9a\u4e49\u7c7b\u578b",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/8.\u81ea\u5b9a\u4e49\u7c7b\u578b",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"noteSidebar",previous:{title:"\u5217\u8868\u64cd\u4f5c",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/7.\u5217\u8868\u64cd\u4f5c"},next:{title:"\u6742\u9879",permalink:"/DNote/docs/notes/\u7b14\u8bb0/\u8ba1\u7b97\u673a\u57fa\u7840/\u7f16\u7a0b\u8bed\u8a00/Haskell/99.\u6742\u9879"}},p={},i=[{value:"data",id:"data",level:2},{value:"class",id:"class",level:2},{value:"\u5b9a\u4e49",id:"\u5b9a\u4e49",level:3},{value:"\u7c7b\u578b\u7ea6\u675f",id:"\u7c7b\u578b\u7ea6\u675f",level:3},{value:"type",id:"type",level:2},{value:"newtype",id:"newtype",level:2}],c={toc:i},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u81ea\u5b9a\u4e49\u7c7b\u578b"},"\u81ea\u5b9a\u4e49\u7c7b\u578b"),(0,r.kt)("h2",{id:"data"},"data"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u6709\u70b9\u50cfC\u91cc\u9762\u7684struct",(0,r.kt)("br",{parentName:"p"}),"\n","\u7528\u6765\u5b9a\u4e49\u6570\u636e\u7684\u7ed3\u6784")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'data Position = MakePosition Double Double -- MakePosition\u662f\u6784\u9020\u51fd\u6570\nMakePosition 1.5 2 :: Position\n\n-- \u4e2d\u7f00\u6784\u9020\u51fd\u6570\ndata Position = Double :+ Double -- \u5fc5\u987b\u52a0\u5192\u53f7\n1.5 :+ 2 :: Position\n\n-- \u7a7a\u6784\u9020\u51fd\u6570\uff08\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u8be5\u7c7b\u578b\u7684\u503c\uff09\ndata Color = Red -- \u6b64\u5904Red\u5c31\u662f\u7a7a\u6784\u9020\u51fd\u6570\n\n-- \u591a\u4e2a\u6784\u9020\u51fd\u6570\ndata Color = Red | Green | Blue\n\n-- \u53c2\u6570\u5316\u7684\u6570\u636e\u7c7b\u578b\ndata UserInfo a b = NoInfo | NameInfo a | AgeInfo b\n\n-- \u8bb0\u5f55\ndata Person\n    = Student\n        { name :: String\n        , age :: Int\n        }\n    | Teacher\n        { name :: String\n        , rank :: String\n        }\n\njohnDoe :: Person\njohnDoe = Student { name = "John Doe", age = 15 } -- \u521b\u5efa\u8bb0\u5f55\n\njohnsName :: String\njohnsName = name johnDoe -- \u8bbf\u95ee\u8bb0\u5f55\u7684\u5b57\u6bb5\n\nolderJohn :: Person\nolderJohn = johnDoe { age = 16 } -- \u66f4\u65b0\u8bb0\u5f55\n\n-- GADTs\uff08\u901a\u7528\u4ee3\u6570\u6570\u636e\u7c7b\u578b\uff09\uff1a\u663e\u5f0f\u6307\u5b9a\u6784\u9020\u51fd\u6570\u7c7b\u578b\ndata Expr a where\n    IntLit   :: Int -> Expr Int\n    BoolLit  :: Bool -> Expr Bool\n    Add      :: Expr Int -> Expr Int -> Expr Int\n')),(0,r.kt)("h2",{id:"class"},"class"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u7c7b\u578b\u7c7b"),(0,r.kt)("br",{parentName:"p"}),"\n","\u6709\u70b9\u50cfinterface",(0,r.kt)("br",{parentName:"p"}),"\n","\u4e3a\u4e00\u7c7b\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u4e00\u7ec4\u529f\u80fd")),(0,r.kt)("h3",{id:"\u5b9a\u4e49"},"\u5b9a\u4e49"),(0,r.kt)("p",null,"\u6ce8\u610f\uff1a\u7c7b\u578b\u7c7b\u4e0d\u662f\u6570\u636e\u7c7b\u578b\uff0c\u7c7b\u578b\u7c7b\u662f\u4e8b\u5148\u7ea6\u5b9a\u597d\u7684\u4e00\u7ec4\u51fd\u6570",(0,r.kt)("br",{parentName:"p"}),"\n","\u7136\u540e\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"instance"),"\u4e3a\u6570\u636e\u7c7b\u578b\u5b9e\u73b0\u8fd9\u4e2a\u7c7b\u578b\u7c7b\u4e2d\u7684\u51fd\u6570\uff08\u4e00\u822c\u6765\u8bf4\u5fc5\u987b\u5b9e\u73b0\u5168\u90e8\u51fd\u6570\uff09"),(0,r.kt)("p",null,"\u7c7b\u578b\u7c7b\u4e0d\u4ec5\u4ec5\u662f\u4e3a\u4e86\u8ba9\u591a\u79cd\u6570\u636e\u7c7b\u578b\u9002\u914d\u540c\u4e00\u4e2a\u51fd\u6570",(0,r.kt)("br",{parentName:"p"}),"\n","\u66f4\u591a\u7684\u662f\u4e3a\u4e86\u89e3\u51b3\u591a\u6001\u548c\u91cd\u8f7d\u7684\u95ee\u9898"),(0,r.kt)("p",null,"\u6ce8\u610f\uff1a\u7c7b\u578b\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u4e5f\u5c5e\u4e8e\u6240\u5904\u6a21\u5757\u7684\u5168\u5c40\u547d\u540d\u7a7a\u95f4\u5185\uff0c\u4e5f\u5c31\u662f\u8bf4\u8ddf\u4f60\u7684\u5176\u4ed6\u51fd\u6570\u4e0d\u80fd\u91cd\u540d",(0,r.kt)("br",{parentName:"p"}),"\n","\u800c\u4e14\u7c7b\u578b\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u53ea\u80fd\u7531\u7c7b\u578b\u7c7b\u7684\u8bed\u6cd5\u53bb\u7ed1\u5b9a\uff0c\u4e0d\u80fd\u76f4\u63a5\u5728\u5168\u5c40\u7ed1\u5b9a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},'data Color = Red | Green | Blue | Transparent | NoColor\n\nclass Describe a where -- \u5b9a\u4e49Describe\u884c\u4e3a\u8fd9\u4e2a\u7c7b\u578b\u7c7b\uff0c\u8fd9\u91cc\u7684a\u662f\u4efb\u610f\u53ef\u80fd\u7684\u6570\u636e\u7c7b\u578b\n    describe :: a -> String\n    -- \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5bf9\u51fd\u6570\u8fdb\u884c\u7ed1\u5b9a\uff0c\u6bd4\u5982describe x = "This is x."\n\ninstance Describe Color where -- \u4e3aColor\u6570\u636e\u7c7b\u578b\u5b9e\u73b0Describe\u7c7b\u578b\u7c7b\uff08\u53ea\u80fd\u7ed1\u5b9aDescribe\u4e2d\u51fa\u73b0\u8fc7\u7684\u51fd\u6570\uff09\n    describe Red = "This is red."\n    describe Green = "This is green."\n    describe Blue = "This is blue."\n    describe _ = "Unknown color."\n')),(0,r.kt)("h3",{id:"\u7c7b\u578b\u7ea6\u675f"},"\u7c7b\u578b\u7ea6\u675f"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ea6\u675f\u67d0\u79cd\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u5b9e\u73b0\u67d0\u4e2a\u7c7b\u578b\u7c7b")),(0,r.kt)("p",null,"\u53ef\u4ee5\u9ad8\u5ea6\u62bd\u8c61\u51fa\u4e00\u79cd\u8bed\u6cd5\uff0c\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt"},"TypeClass1 a, TypeClass2 b, ... => ActualType\n")),(0,r.kt)("p",null,"\u5c31\u662f\u8bf4\uff0c\u5728\u5de6\u8fb9\u89c4\u5b9a",(0,r.kt)("inlineCode",{parentName:"p"},"a"),"\u662f\u5b9e\u73b0\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"TypeClass1"),"\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u53f3\u8fb9\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"a"),"\u7c7b\u578b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"-- \u51fd\u6570\u7b7e\u540d\nfunctionName :: TypeClass1 a => a -> ...\n\n-- \u6570\u636e\u7c7b\u578b\u5b9a\u4e49\ndata DataType a where\n    ConstructorName :: TypeClass1 a => a -> DataType a\n\n-- \u7c7b\u578b\u7c7b\u5b9a\u4e49\nclass TypeClass1 a => TypeClass2 a where\n    ...\n\n-- \u7c7b\u578b\u5b9e\u4f8b\u5b9a\u4e49\ninstance (TypeClass1 a, TypeClass2 a) => TypeClass3 [a] where\n    ...\n")),(0,r.kt)("h2",{id:"type"},"type"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7c7b\u578b\u522b\u540d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"type Position = (Double, Double)\n")),(0,r.kt)("h2",{id:"newtype"},"newtype"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5b9a\u4e49\u65b0\u7684\u7c7b\u578b\uff0c\u4f46\u662f\u53ea\u6709\u4e00\u4e2a\u6784\u9020\u51fd\u6570")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-haskell"},"newtype Position = MakePosition (Double, Double)\nMakePosition (1.5, 2) :: Position\n")))}d.isMDXComponent=!0}}]);